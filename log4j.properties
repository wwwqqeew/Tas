 ### set log levels ###
log4j.rootLogger = debug ,  stdout ,  D ,E
# FATAL      0  
#ERROR      3  
#WARN       4  
#INFO       6  
#DEBUG      7 

### 输出到控制台 ###
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern =  %d{ABSOLUTE} %5p %c:%L - %m%n

### 输出到日志文件 ###
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
log4j.appender.D.File = logsRiZi/logRiZi.log
#log4j.appender.D.DatePattern=yyyy-MM-dd-HH-mm'.log'
log4j.appender.D.Append = true
#log4j.additivity.D = false 
#确保写入client.log文件信息不重复出现到server.log文件中.
#log4j.logger.D=DEBUG,D
#确保只对log4j的info信息感兴趣.
## 输出DEBUG级别以上的日志
#log4j.appender.D.Threshold = DEBUG
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r:%c ] - [ %p ]  %m%n
#配置Filter
#定义id为F1的拦截器,只接受INFO到ERROR
log4j.appender.D.filter.F1=org.apache.log4j.varia.LevelRangeFilter
log4j.appender.D.filter.F1.LevelMin=DEBUG
log4j.appender.D.filter.F1.LevelMax=INFO



### 保存异常信息到单独文件 ###
log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
## 异常日志文件名
log4j.appender.E.File = logs/errorYiCn.log 
#log4j.appender.E.DatePattern=yyyy-MM-dd-HH-mm'.log'
log4j.appender.E.Append = true
log4j.additivity.E = false 
#确保写入client.log文件信息不重复出现到server.log文件中.
log4j.logger.E=ERROR,E
#确保只对log4j的info信息感兴趣.
## 只输出ERROR级别以上的日志!!!
log4j.appender.E.Threshold = ERROR 
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r:%c ] - [ %p ]  %m%n